def versions = [
        appcompat          : "1.1.0",
        lifecycleExtensions: "2.2.0",
        okhttp             : "4.8.0",
        retrofit           : "2.9.0",
        glide              : "4.11.0"
]

def android = [
        appcompat          : "androidx.appcompat:appcompat:$versions.appcompat",
        lifecycleExtensions: "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleExtensions",
        constraintlayout   : "androidx.constraintlayout:constraintlayout:1.1.3",
        desugarJdk         : "com.android.tools:desugar_jdk_libs:1.0.10"
]

def test = [
        junit              : "junit:junit:4.13",
        androidJunit       : "androidx.test.ext:junit:1.1.1",
        androidEspressoCore: "androidx.test.espresso:espresso-core:3.2.0"
]

def remote = [
        okhttp                  : "com.squareup.okhttp3:okhttp:$versions.okhttp",
        okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp",
        okhttpAndroidSupport    : "com.squareup.okhttp3:okhttp-android-support:3.13.1",

        retrofit                : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        retrofitConverterGson   : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
//        retrofitAdapterRxJava   : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",

//        rxJava                  : "io.reactivex.rxjava2:rxjava:2.2.19",
//        rxAndroid               : "io.reactivex.rxjava2:rxandroid:2.1.1",

        gson                    : "com.google.code.gson:gson:2.8.6",

        glide                   : "com.github.bumptech.glide:glide:$versions.glide",
        glideCompiler           : "com.github.bumptech.glide:compiler:$versions.glide",

        adapter                 : "com.github.ccolorcat:Adapter:v3.4.1",
]

def sdk = [

]

ext {
    androidConfig = [
            compileSdk : 29,
            minSdk     : 19,
            targetSdk  : 29,
            versionCode: 1,
            versionName: "1.0.0"
    ]

    javaCompileOptions = [
            source: JavaVersion.VERSION_1_8,
            target: JavaVersion.VERSION_1_8
    ]

    libraries = [
            "android": android,
            "test"   : test,
            "remote" : remote,
            "sdk"    : sdk
    ]

    // set plugin module dependencies api module
    setApiDependency = {
        def children = project.rootProject.childProjects
        children.each {
            def childKey = it.key
            if (childKey.endsWith("_api")) {
                def pluginKey = childKey[0..<-4]
                if (children.containsKey(pluginKey)) {
                    def plugin = children[pluginKey]
                    plugin.afterEvaluate {
                        def api = plugin.dependencies.create(project(":" + childKey))
                        plugin.dependencies.add("implementation", api)
                    }

//                    def apiPlugin = children[childKey]
//                    apiPlugin.afterEvaluate {
//                        def api = apiPlugin.dependencies.create(project(":" + pluginKey))
//                        apiPlugin.dependencies.add("implementation", api)
//                    }
                }
            }
        }
    }
}
